{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bio/bio.component.ts","webpack:///src/app/bio/bio.component.html","webpack:///src/app/category-card/category-card.component.ts","webpack:///src/app/category-card/category-card.component.html","webpack:///src/app/category/category.component.ts","webpack:///src/app/category/category.component.html","webpack:///src/app/comments-count/comments-count.component.ts","webpack:///src/app/comments-count/comments-count.component.html","webpack:///src/app/comments/comments.component.ts","webpack:///src/app/comments/comments.component.html","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/content-type/content-type.component.ts","webpack:///src/app/content.service.ts","webpack:///src/app/dynamic-route/dynamic-route.component.ts","webpack:///src/app/dynamic-route/dynamic-route.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/image/image.component.ts","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/pagination/pagination.component.ts","webpack:///src/app/pagination/pagination.component.html","webpack:///src/app/popular-posts-aside/recent-posts-aside.component.ts","webpack:///src/app/popular-posts-aside/recent-posts-aside.component.html","webpack:///src/app/post-card/post-card.component.ts","webpack:///src/app/post-card/post-card.component.html","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/app/queries.graphql.js","webpack:///src/app/responsive-columns/responsive-columns.component.ts","webpack:///src/app/responsive-columns/responsive-columns.component.html","webpack:///src/app/rich-text/rich-text.component.ts","webpack:///src/app/search-form/search-form.component.ts","webpack:///src/app/search-form/search-form.component.html","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/app/sidebar-bios/sidebar-bios.component.ts","webpack:///src/app/sidebar-bios/sidebar-bios.component.html","webpack:///src/app/sidebar-categories/sidebar-categories.component.ts","webpack:///src/app/sidebar-categories/sidebar-categories.component.html","webpack:///src/app/sidebar-search/sidebar-search.component.ts","webpack:///src/app/sidebar-search/sidebar-search.component.html","webpack:///src/app/sidebar-tags/sidebar-tags.component.ts","webpack:///src/app/sidebar-tags/sidebar-tags.component.html","webpack:///src/app/sidebar-taxonomies/sidebar-taxonomies.component.ts","webpack:///src/app/sidebar-taxonomies/sidebar-taxonomies.component.html","webpack:///src/app/slider/slider.component.ts","webpack:///src/app/slider/slider.component.html","webpack:///src/app/sort-by.pipe.ts","webpack:///src/app/toast/toast.component.ts","webpack:///src/app/toast/toast.component.html","webpack:///src/app/utils.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","contentService","paginationData","getPosts","subscribe","response","pageCount","Math","ceil","total","itemsPerPage","posts_o","items","page","currentPage","headline_s","state","model","bios_o","content_o","meta","posts","limit","selector","templateUrl","styleUrls","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","AppModule","declarations","providers","bootstrap","BioComponent","name","bio","name_s","profilePic","profilePic_s","linkButtonUrl","linkButtonUrl_s","showLinkButton","showLinkButton_b","linkButtonText","linkButtonText_s","bioText","bio_t","facebookLink","facebookLink_s","twitterLink","twitterLink_s","instagramLink","instagramLink_s","youTubeLink","youTubeLink_s","CategoryCard","link","isTag","category","key","CategoryComponent","router","actRoute","item","url","startsWith","itemId","snapshot","params","filter","createTaxonomyFilter","getTaxonomies","CommentsCountComponent","origin","window","location","DISQUS_COUNT_SCRIPT","disqusCountEl","document","getElementById","d","s","createElement","src","websiteShortname","async","body","appendChild","CommentsComponent","DISQUS_SCRIPT","sd","disqus_config","identifier","setAttribute","Date","DISQUS","reset","reload","config","initialFormData","phone","email","message","initialToastData","display","type","text","ContactComponent","formData","toastData","setTimeout","submitContactData","success","showToast","handleSubmit","contentTypeMap","ContentTypeComponent","viewContainerRef","componentFactoryResolver","craftercms","contentTypeId","componentFactory","resolveComponentFactory","clear","componentRef","createComponent","instance","template","ContentService","httpClient","graphqlServer","includes","siteName","operation","variables","headers","options","post","JSON","stringify","query","fetchQuery","pipe","data","pages","component_footer","categories","tags","exclude","categoriesFilter","Array","isArray","map","matches","tagsFilter","tag","queryVariables","offset","taxonomy","size","from","contentTypes","crafterConfig","component_level__descriptor","httpPost","error","providedIn","DynamicRouteComponent","getUrlWithoutParams","routeReuseStrategy","shouldReuseRoute","getPageData","includePosts","postsLimit","postsOffset","content","taxonomies","levelDescriptor","levelDescriptors","file__name","siteTitle","siteTitle_s","socialLinks","socialLinks_o","disqus","websiteShortname_s","title","pageTitle_s","pageDescription_s","description","head","querySelector","urlTree","parseUrl","queryParams","routePath","routeConfig","substring","indexOf","toString","FooterComponent","getFooter","footer","getLevelDescriptor","HeaderComponent","nav","getNav","HomeComponent","slider_o","ImageComponent","image_s","alternativeText_s","NotFoundComponent","defaultData","PaginationComponent","onPageChange","pageChange","RecentPostsAsideComponent","PORTRAIT","LANDSCAPE","LANDSCAPE_COMPRESSED","IMAGE_BACKGROUND","PostCardComponent","showBlurb","format","mainImage_s","dateModified","formatDate","blurb_t","authorAvatarUrl","authorBio_o","authorName","slug","computeSlug","categories_o","PostComponent","tags_o","postId","dateCreated","numOfPages","commonFragments","postsQuery","ResponsiveColumnsComponent","RichTextComponent","content_html","SearchFormComponent","keyword","getKeyword","urlParams","URLSearchParams","search","get","events","val","navigate","q","onEnter","placeholder","SearchComponent","results","totalResults","searchPosts","hits","parsedHits","_source","rest","value","getResults","parameters","SidebarBiosComponent","SidebarCategoriesComponent","SidebarSearchComponent","SidebarTagsComponent","SidebarTaxonomiesComponent","filteredTaxonomies","SliderComponent","slider","$","owlCarousel","loop","autoplay","margin","animateOut","animateIn","autoplayHoverPause","navText","responsive","SortByPipe","array","field","sort","a","b","ToastComponent","Utils","crafterSiteId","replace","baseUrl","site","date","toLocaleDateString","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Input, OnInit } from '@angular/core';\nimport { ContentService } from '../content.service';\nimport { defaultData } from '../pagination/pagination.component';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n  @Input() state;\n  public posts_o;\n  public bios_o;\n  public headline_s;\n  public content_o;\n  public numOfPages;\n  public paginationData = defaultData;\n\n  constructor(private contentService: ContentService) {\n  }\n\n  getPosts(): void {\n    this.contentService.getPosts(null, null, null, this.paginationData)\n      .subscribe(response => {\n        this.paginationData.pageCount = Math.ceil(response.total / this.paginationData.itemsPerPage);\n        this.posts_o = response.items;\n      });\n  }\n\n  onPageChange(page: number) {\n    this.paginationData.currentPage = page;\n    this.getPosts();\n  }\n\n  ngOnInit(): void {\n    this.headline_s = this.state.model.headline_s;\n    this.bios_o = this.state.model.bios_o;\n    this.content_o = this.state.model.content_o;\n    this.paginationData.itemsPerPage = this.state.meta.posts.limit;\n\n    this.getPosts();\n  }\n}\n","<section class=\"site-section pt-5\">\n  <div class=\"container\">\n    <div class=\"row blog-entries\">\n      <div class=\"col-md-12 col-lg-8 main-content\">\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <h2>{{headline_s}}</h2>\n\n            <div class=\"mb-5\" *ngFor=\"let component of content_o\">\n              <app-content-type [model]=\"component\"></app-content-type>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row mb-5 mt-5\">\n          <div class=\"col-md-12 mb-5\">\n            <h2>\n              Latest Posts\n            </h2>\n          </div>\n          <div class=\"col-md-12\">\n            <app-post-card\n              *ngFor=\"let post of posts_o;\" [format]=\"'landscape'\" [model]=\"post\"\n            ></app-post-card>\n          </div>\n        </div>\n\n        <div *ngIf=\"paginationData.pageCount > 1\" class=\"row\">\n          <div class=\"col-md-12 text-center\">\n            <nav aria-label=\"Page navigation\" class=\"text-center\">\n              <app-pagination\n                [currentPage]=\"paginationData.currentPage\"\n                [itemsPerPage]=\"paginationData.itemsPerPage\"\n                [pageCount]=\"paginationData.pageCount\"\n                [onPageChange]=\"onPageChange.bind(this)\"\n              ></app-pagination>\n            </nav>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"col-md-12 col-lg-4 sidebar\">\n\n        <app-sidebar-search></app-sidebar-search>\n\n        <app-sidebar-bios [bios]=\"bios_o\"></app-sidebar-bios>\n\n        <app-recent-posts-aside></app-recent-posts-aside>\n\n        <app-sidebar-categories></app-sidebar-categories>\n\n        <app-sidebar-tags></app-sidebar-tags>\n\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DynamicRouteComponent } from './dynamic-route/dynamic-route.component';\n\nconst routes: Routes = [\n  { path: 'category/:id', component: DynamicRouteComponent},\n  { path: 'tag/:id', component: DynamicRouteComponent},\n  { path: '', component: DynamicRouteComponent },\n  { path: '**', component: DynamicRouteComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<div class=\"wrap theme-light\">\n  <app-header></app-header>\n  <div class=\"wrap\">\n    <router-outlet></router-outlet>\n  </div>\n  <app-footer></app-footer>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { SortByPipe } from './sort-by.pipe';\nimport { SliderComponent } from './slider/slider.component';\nimport { DynamicRouteComponent } from './dynamic-route/dynamic-route.component';\nimport { PostCardComponent } from './post-card/post-card.component';\nimport { SidebarSearchComponent } from './sidebar-search/sidebar-search.component';\nimport { SearchFormComponent } from './search-form/search-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { SidebarBiosComponent } from './sidebar-bios/sidebar-bios.component';\nimport { BioComponent } from './bio/bio.component';\nimport { RecentPostsAsideComponent } from './popular-posts-aside/recent-posts-aside.component';\nimport { SidebarCategoriesComponent } from './sidebar-categories/sidebar-categories.component';\nimport { SidebarTagsComponent } from './sidebar-tags/sidebar-tags.component';\nimport { CategoryComponent } from './category/category.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { AboutComponent } from './about/about.component';\nimport { PostComponent } from './post/post.component';\nimport { SidebarTaxonomiesComponent } from './sidebar-taxonomies/sidebar-taxonomies.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { CategoryCard } from './category-card/category-card.component';\nimport { SearchComponent } from './search/search.component';\nimport { ContentTypeComponent } from './content-type/content-type.component';\nimport { ImageComponent } from './image/image.component';\nimport { ResponsiveColumnsComponent } from './responsive-columns/responsive-columns.component';\nimport { RichTextComponent } from './rich-text/rich-text.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ToastComponent } from './toast/toast.component';\nimport { CommentsComponent } from './comments/comments.component';\nimport { CommentsCountComponent } from './comments-count/comments-count.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    SortByPipe,\n    SliderComponent,\n    DynamicRouteComponent,\n    PostCardComponent,\n    SidebarSearchComponent,\n    SearchFormComponent,\n    SidebarBiosComponent,\n    BioComponent,\n    RecentPostsAsideComponent,\n    SidebarCategoriesComponent,\n    SidebarTagsComponent,\n    CategoryComponent,\n    ContactComponent,\n    AboutComponent,\n    PostComponent,\n    SidebarTaxonomiesComponent,\n    PaginationComponent,\n    CategoryCard,\n    SearchComponent,\n    ContentTypeComponent,\n    ImageComponent,\n    ResponsiveColumnsComponent,\n    RichTextComponent,\n    NotFoundComponent,\n    ToastComponent,\n    CommentsComponent,\n    CommentsCountComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bio',\n  templateUrl: './bio.component.html',\n  styleUrls: ['./bio.component.scss']\n})\nexport class BioComponent implements OnInit {\n  @Input() bio;\n  public name;\n  public profilePic;\n  public bioText;\n  public showLinkButton;\n  public linkButtonText;\n  public linkButtonUrl;\n  public facebookLink;\n  public twitterLink;\n  public instagramLink;\n  public youTubeLink;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    // TODO: can be used directly from bio. ???\n    this.name = this.bio.name_s;\n    this.profilePic = this.bio.profilePic_s;\n    this.linkButtonUrl = this.bio.linkButtonUrl_s;\n    this.showLinkButton = this.bio.showLinkButton_b;\n    this.linkButtonText = this.bio.linkButtonText_s;\n    this.bioText = this.bio.bio_t;\n    this.facebookLink = this.bio.facebookLink_s;\n    this.twitterLink = this.bio.twitterLink_s;\n    this.instagramLink = this.bio.instagramLink_s;\n    this.youTubeLink = this.bio.youTubeLink_s;\n  }\n\n}\n","<div class=\"bio text-center\">\n  <img class=\"img-fluid\" src=\"{{profilePic}}\">\n  <div class=\"bio-body\">\n    <h2>{{name}}</h2>\n\n    <p *ngIf=\"showLinkButton\">\n      <a class=\"btn btn-primary btn-sm rounded\" href=\"{{linkButtonUrl}}\">{{linkButtonText}}</a>\n    </p>\n    <p>{{bioText}}</p>\n    <p class=\"social\">\n      <a *ngIf=\"facebookLink\" class=\"p-2\" href=\"{{facebookLink}}\">\n        <span class=\"fa fa-facebook\"></span>\n      </a>\n      <a *ngIf=\"twitterLink\" class=\"p-2\" href=\"{{twitterLink}}\">\n        <span class=\"fa fa-twitter\"></span>\n      </a>\n      <a *ngIf=\"instagramLink\" class=\"p-2\" href=\"{{instagramLink}}\">\n        <span class=\"fa fa-instagram\"></span>\n      </a>\n      <a *ngIf=\"youTubeLink\" class=\"p-2\" href=\"{{youTubeLink}}\">\n        <span class=\"fa fa-youtube-play\"></span>\n      </a>\n    </p>\n  </div>\n</div>\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-category-card',\n  templateUrl: './category-card.component.html',\n  styleUrls: ['./category-card.component.scss']\n})\nexport class CategoryCard implements OnInit {\n  @Input() category;\n  @Input() isTag;\n  public link;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.link = `/${ this.isTag ? 'tag' : 'category' }/${this.category.key}`;\n  }\n}\n","<!--\n  ~ Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU General Public License version 3 as published by\n  ~ the Free Software Foundation.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<a routerLink=\"{{link}}\" class=\"blog-entry category-card\">\n  <img *ngIf=\"category.image_s\" class=\"background\" src=\"{{category.image_s}}\" alt=\"{{category.value}}\"/>\n  <h2 class=\"title\">{{ category.value }}</h2>\n</a>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ContentService } from '../content.service';\nimport Utils from '../utils';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\n  @Input() state;\n  public isTag;\n  public itemId;         // category/tag id retrieved from url param\n  public items = [];     // list of categories/tags\n  public item;           // current category/tag\n  public posts_o = [];\n  public paginationData = {\n    currentPage: 0,\n    itemsPerPage: 0,\n    pageCount: 0\n  };\n\n  constructor(private router: Router, private actRoute: ActivatedRoute, private contentService: ContentService) {\n  }\n\n  getPosts(): void {\n    this.contentService.getPosts(\n      this.isTag ? null : this.item,\n      this.isTag ? this.item : null,\n      null,\n      this.paginationData)\n      .subscribe(response => {\n        this.paginationData.pageCount = Math.ceil(response.total / this.paginationData.itemsPerPage);\n        this.posts_o = response.items;\n      });\n  }\n\n  onPageChange(page: number) {\n    this.paginationData.currentPage = page;\n    this.getPosts();\n  }\n\n  ngOnInit(): void {\n    this.isTag = this.router.url.startsWith('/tag');\n    this.itemId = this.actRoute.snapshot.params.id;\n    this.paginationData.itemsPerPage = this.state.meta.posts.limit;\n\n    const filter = Utils.createTaxonomyFilter(`${this.isTag ? 'tags' : 'categories'}.xml`);\n\n    this.contentService.getTaxonomies()\n      .subscribe(response => {\n        this.items = response.filter(filter)[0].items.item;\n\n        if(this.itemId) {\n          this.item = this.items?.filter(category => category.key === this.itemId)[0];\n          this.getPosts();\n        }\n      })\n  }\n\n}\n","<section class=\"site-section pt-5\">\n  <div class=\"container\">\n    <div class=\"row blog-entries\">\n      <!-- IF NO ITEM ID -->\n      <div *ngIf=\"!itemId\" class=\"col-md-12 col-lg-8 main-content\">\n        <h2 class=\"mb-4\">{{ isTag ? 'Tags' : 'Categories' }}:</h2>\n        <div class=\"row\">\n          <div class=\"col-md-6 mb-4\" *ngFor=\"let category of items\">\n            <app-category-card\n              [category]=\"category\" [isTag]=\"isTag\"\n            ></app-category-card>\n          </div>\n        </div>\n      </div>\n\n      <!-- IF ITEM ID -->\n      <div *ngIf=\"itemId\" class=\"col-md-12 col-lg-8 main-content\">\n        <h2 class=\"mb-4\">{{isTag ? 'Tag' : 'Category'}}: {{item?.value}}</h2>\n\n        <div class=\"row mb-5 mt-5\">\n          <div class=\"col-md-12\">\n            <app-post-card\n              *ngFor=\"let post of posts_o;\" [format]=\"'landscape'\" [model]=\"post\"\n            ></app-post-card>\n          </div>\n        </div>\n        <div *ngIf=\"paginationData.pageCount > 1\" class=\"row mt-5\">\n          <div class=\"col-md-12 text-center\">\n            <nav aria-label=\"Page navigation\" class=\"text-center\">\n              <app-pagination\n                [currentPage]=\"paginationData.currentPage\"\n                [itemsPerPage]=\"paginationData.itemsPerPage\"\n                [pageCount]=\"paginationData.pageCount\"\n                [onPageChange]=\"onPageChange.bind(this)\"\n              ></app-pagination>\n            </nav>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-md-12 col-lg-4 sidebar\">\n\n        <app-sidebar-search></app-sidebar-search>\n\n        <app-recent-posts-aside></app-recent-posts-aside>\n\n        <app-sidebar-categories></app-sidebar-categories>\n\n        <app-sidebar-tags></app-sidebar-tags>\n\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, Input, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comments-count',\n  templateUrl: './comments-count.component.html',\n  styleUrls: ['./comments-count.component.scss']\n})\nexport class CommentsCountComponent implements AfterViewInit {\n  @Input() id;\n  @Input() websiteShortname;\n  public origin;\n\n  constructor() {\n    this.origin = window.location.origin;\n  }\n\n  ngAfterViewInit(): void {\n    const DISQUS_COUNT_SCRIPT = 'dsq-count-scr';\n    const disqusCountEl = document.getElementById(DISQUS_COUNT_SCRIPT);\n\n    if (!disqusCountEl) {\n      const d = document;\n      const s = d.createElement('script');\n      s.src = `https://${this.websiteShortname ?? 'DISQUS'}.disqus.com/count.js`;\n      s.id = DISQUS_COUNT_SCRIPT;\n      s.async = true;\n\n      d.body.appendChild(s);\n    }\n  }\n\n}\n","<span class=\"disqus-comment-count ml-2\" attr.data-disqus-identifier=\"{{id}}\" attr.data-disqus-url=\"{{origin}}\"></span>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.scss']\n})\nexport class CommentsComponent implements OnInit {\n  @Input() id;\n  @Input() websiteShortname;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    const DISQUS_SCRIPT = 'disq_script';\n    const sd = document.getElementById(DISQUS_SCRIPT);\n    if (!sd) {\n      var disqus_config = function() {\n        this.page.url = window.location.origin\n        this.page.identifier = this.id\n      }\n\n      const d = document;\n      const s = d.createElement('script');\n      s.src = `https://${this.websiteShortname??'DISQUS'}.disqus.com/embed.js`;\n      s.id = DISQUS_SCRIPT;\n      s.async = true;\n      // @ts-ignore\n      s.setAttribute('data-timestamp', + new Date());\n\n      d.body.appendChild(s);\n    } else {\n      // @ts-ignore\n      window.DISQUS.reset({\n        reload: true,\n        config: disqus_config,\n      });\n    }\n  }\n\n}\n","<div id=\"disqus_thread\" className=\"mt-5\"></div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ContentService } from '../content.service';\n\nconst initialFormData = {\n  name: '',\n  phone: '',\n  email: '',\n  message: ''\n};\n\nconst initialToastData = {\n  display: false,\n  type: '',\n  text: ''\n};\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n  @Input() state;\n  public posts_o;\n  public formData = { ...initialFormData };\n  public toastData = { ...initialToastData };\n\n  constructor(private contentService: ContentService) {\n  }\n\n  showToast(text: string, type: string) {\n    this.toastData = {\n      display: true,\n      text,\n      type\n    };\n    setTimeout(() => {\n      this.toastData = { ...initialToastData };\n    }, 3000);\n  }\n\n  handleSubmit() {\n    this.contentService.submitContactData(this.formData)\n      .subscribe(response => {\n        if (response.success) {\n          this.formData = { ...initialFormData };\n          this.showToast('Message successfully sent!', 'success');\n        } else {\n          this.showToast('There was an error sending the message', 'danger');\n        }\n      })\n\n  }\n\n  ngOnInit(): void {\n    this.posts_o = this.state.posts;\n  }\n\n}\n","<section class=\"site-section\">\n  <div class=\"container\">\n    <div class=\"row mb-4\">\n      <div class=\"col-md-6\">\n        <h1>Contact Me</h1>\n      </div>\n    </div>\n    <div class=\"row blog-entries\">\n      <div class=\"col-md-12 col-lg-8 main-content\">\n\n        <form (ngSubmit)=\"handleSubmit()\">\n          <div class=\"row\">\n            <div class=\"col-md-12 form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                class=\"form-control \"\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                [(ngModel)]=\"formData.name\"/>\n            </div>\n            <div class=\"col-md-12 form-group\">\n              <label htmlFor=\"phone\">Phone</label>\n              <input\n                class=\"form-control \"\n                id=\"phone\"\n                name=\"phone\"\n                type=\"text\"\n                [(ngModel)]=\"formData.phone\"\n              />\n            </div>\n            <div class=\"col-md-12 form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                class=\"form-control \"\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                [(ngModel)]=\"formData.email\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12 form-group\">\n              <label htmlFor=\"message\">Write Message</label>\n              <textarea\n                class=\"form-control \"\n                cols=\"30\"\n                id=\"message\"\n                name=\"message\"\n                rows=\"8\"\n                [(ngModel)]=\"formData.message\"\n              ></textarea>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-6 form-group\">\n              <input class=\"btn btn-primary\" type=\"submit\" value=\"Send Message\" />\n            </div>\n          </div>\n        </form>\n\n      </div>\n\n      <div class=\"col-md-12 col-lg-4 sidebar\">\n        <div class=\"sidebar-box search-form-wrap\">\n          <form action=\"#\" class=\"search-form\">\n            <div class=\"form-group\">\n              <span class=\"icon fa fa-search\"></span>\n              <input\n                class=\"form-control\" id=\"s\" placeholder=\"Type a keyword and hit enter\" type=\"text\"\n              />\n            </div>\n          </form>\n        </div>\n\n        <app-recent-posts-aside></app-recent-posts-aside>\n\n        <app-sidebar-categories></app-sidebar-categories>\n\n        <app-sidebar-tags></app-sidebar-tags>\n\n      </div>\n\n    </div>\n  </div>\n\n  <app-toast\n    [display]=\"toastData.display\"\n    [type]=\"toastData.type\"\n    [text]=\"toastData.text\"\n  ></app-toast>\n</section>\n","import {\n  Component,\n  ComponentFactoryResolver,\n  Input,\n  OnInit,\n  ViewContainerRef\n} from '@angular/core';\nimport { ImageComponent } from '../image/image.component';\nimport { RichTextComponent } from '../rich-text/rich-text.component';\nimport { NotFoundComponent } from '../not-found/not-found.component';\nimport { ResponsiveColumnsComponent } from '../responsive-columns/responsive-columns.component';\n\nconst contentTypeMap = {\n  '/component/rich_text': RichTextComponent,\n  '/component/image': ImageComponent,\n  '/component/responsive_columns': ResponsiveColumnsComponent\n}\n\n@Component({\n  selector: 'app-content-type',\n  template: `<div></div>`,\n  styleUrls: ['./content-type.component.scss']\n})\nexport class ContentTypeComponent implements OnInit {\n  @Input() model;\n  public component;\n\n  constructor(public viewContainerRef: ViewContainerRef,\n              private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  ngOnInit(): void {\n    this.component = this.model === null\n      ? NotFoundComponent\n      : (contentTypeMap[this.model.craftercms.contentTypeId] || NotFoundComponent);\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.component);\n    this.viewContainerRef.clear();\n\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\n    // @ts-ignore\n    componentRef.instance.model = this.model;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { catchError, map } from 'rxjs/operators';\nimport Utils from './utils';\nimport { Observable } from 'rxjs';\nimport { NavItem } from './header/header.component';\nimport byUrlQuery, { postsQuery } from './queries.graphql';\nimport { Footer } from './footer/footer.component';\nimport { createQuery, search } from '@craftercms/search';\nimport { parseDescriptor } from '@craftercms/content';\nimport { SDKService } from '@craftercms/classes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentService {\n  public graphqlServer;\n  constructor(private httpClient: HttpClient) {\n    this.graphqlServer = environment.graphqlServer;\n    if (!this.graphqlServer.includes(Utils.siteName())) {\n      this.graphqlServer += `?crafterSite=${Utils.siteName()}`;\n    }\n  }\n\n  fetchQuery(operation, variables?) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    let options = { headers: headers };\n\n    return this.httpClient.post(\n      this.graphqlServer,\n      JSON.stringify({\n        query: operation.text,\n        variables\n      }),\n      options\n    );\n  }\n\n  getNav(): Observable<NavItem[]> {\n    return this.fetchQuery({\n      text: `\n          query Nav {\n            pages {\n              total\n              items {\n                navLabel\n                contentTypeId: content__type\n                url: localId(transform: \"storeUrlToRenderUrl\")\n                placeInNav(filter: { equals: true }) @skip(if: true)\n                orderDefault_f\n              }\n            }\n          }\n        `\n    }).pipe(map((response: any) => response.data.pages.items));\n  }\n\n  getPageData(url: string, options?): Observable<any> {\n    return this.fetchQuery(\n      { text: byUrlQuery },\n      {\n        url: `.*${url === '/' ? 'website/index' : url}.*`,\n        ...options\n      }\n    );\n  }\n\n  getFooter(): Observable<Footer> {\n    return this.fetchQuery({\n      text: `query Footer {\n        component_footer {\n          items {\n            guid: objectId\n            path: localId\n            contentTypeId: content__type\n            dateCreated: createdDate_dt\n            dateModified: lastModifiedDate_dt\n            label: internal__name\n            aboutTitle_s\n            about_t\n            aboutImage_s\n            quickLinksTitle_s\n            socialLinksTitle_s\n            file__name(filter: {matches: \"site-footer.xml\"})\n            internal__name\n            localId\n            quickLinks_o {\n              item {\n                label_s\n                url_s\n              }\n            }\n            copyright_html_raw\n          }\n        }\n      }`\n    }).pipe(map((response: any) => parseDescriptor(response.data.component_footer.items)[0]));\n  }\n\n  getPosts(categories?, tags?, exclude?, paginationData?): Observable<any> {\n    const categoriesFilter = categories\n      ? Array.isArray(categories)\n        ? categories.map(category => ({ matches: category.key }))\n        : [{ matches: categories.key }]\n      : [];\n    const tagsFilter = tags\n      ? Array.isArray(tags)\n        ? tags.map(tag => ({ matches: tag.key }))\n        : [{ matches: tags.key }]\n      : [];\n    const queryVariables = {\n      categoriesFilter,\n      tagsFilter,\n      exclude: exclude ?? '',\n      ...(\n        paginationData ? {\n          limit: paginationData.itemsPerPage,\n          offset: (paginationData.currentPage * paginationData.itemsPerPage)\n        } : {}\n      )\n    };\n\n    return this.fetchQuery(\n      { text: postsQuery },\n      queryVariables\n    ).pipe(map((response: any) => ({\n      items: parseDescriptor(response.data.posts.items),\n      total: response.data.posts.total,\n      ...(paginationData ? {\n        pageCount: Math.ceil(response.data.posts.total / paginationData.itemsPerPage)\n      } : {})\n    })));\n  }\n\n  getTaxonomies(): Observable<any> {\n    return this.fetchQuery({\n      text: `query Taxonomies {\n        taxonomy {\n          total\n          items {\n            guid: objectId\n            path: localId\n            contentTypeId: content__type\n            dateCreated: createdDate_dt\n            dateModified: lastModifiedDate_dt\n            label: internal__name\n            items {\n              item {\n                key\n                value\n                image_s\n              }\n            }\n          }\n        }\n      }`\n    }).pipe(map((response: any) => parseDescriptor(response.data.taxonomy.items)));\n  }\n\n  searchPosts(query: string, size: number = 1, from: number = 0): any {\n    const contentTypes = ['/component/post'];\n\n    return search(\n      createQuery('elasticsearch', {\n        query: {\n          'bool': {\n            'filter': [\n              { 'bool': { 'should': contentTypes.map(id => ({ 'match': { 'content-type': id } })) } },\n              { 'multi_match': { 'query': query, 'type': 'phrase_prefix' } }\n            ]\n          }\n        },\n        size,\n        from\n      }),\n      Utils.crafterConfig()\n    )\n  }\n\n  getLevelDescriptor(): Observable<any> {\n    return this.fetchQuery({\n      text: `query LevelDescriptor {\n        component_level__descriptor {\n          items {\n            siteTitle_s\n            file__name\n            websiteShortname_s\n            socialLinks_o {\n              item {\n                socialNetwork_s\n                label_s\n                url_s\n              }\n            }\n          }\n        }\n      }`\n    }).pipe(\n      map((response: any) =>\n        parseDescriptor(response.data.component_level__descriptor.items[0])\n      )\n    );\n  }\n\n  submitContactData(data): Observable<any> {\n    return SDKService.httpPost(\n      '/api/contactus.json',\n      data\n    ).pipe(\n      catchError(error => [error])\n    )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ContentService } from '../content.service';\nimport { parseDescriptor } from '@craftercms/content';\nimport { ContentInstance } from '@craftercms/models';\nimport { reportNavigation } from '@craftercms/ice';\n\n@Component({\n  selector: 'app-dynamic-route',\n  templateUrl: './dynamic-route.component.html',\n  styleUrls: ['./dynamic-route.component.scss']\n})\nexport class DynamicRouteComponent implements OnInit {\n  constructor(private router: Router, private contentService: ContentService, private actRoute: ActivatedRoute) {\n    // since router path is `**`, router doesn't load view changes\n    // this disables route reuse for the views to load properly\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n  }\n  private url: string = this.getUrlWithoutParams();\n  public state;\n  public contentTypeId;\n\n  ngOnInit(): void {\n    reportNavigation(this.url);   // TODO: won't work because there is no guest loaded\n    this.contentService.getPageData(this.url, {\n      includePosts: true,\n      postsLimit: 3,\n      postsOffset: 0\n    })\n      .subscribe(({ data }) => {\n        const model = parseDescriptor(data.content.items?.[0]) as ContentInstance;\n        const posts = parseDescriptor(data.posts.items);\n        const taxonomies = parseDescriptor(data.taxonomies.items);\n        const levelDescriptor = data.levelDescriptors.items\n          .filter(levelDescriptor => levelDescriptor.file__name === 'crafter-level-descriptor.level.xml')\n          .map(levelDescriptor => levelDescriptor)[0];\n\n        this.contentTypeId = model.craftercms.contentTypeId;\n        this.state = {\n          model,\n          posts,\n          taxonomies,\n          meta: {\n            siteTitle: levelDescriptor.siteTitle_s,\n            socialLinks: levelDescriptor.socialLinks_o.item,\n            disqus: {\n              websiteShortname: levelDescriptor.websiteShortname_s\n            },\n            posts: {\n              total: data.posts.total,\n              limit: 3,\n              offset: 0\n            }\n          }\n        };\n\n        if (model) {\n          document.title = model.pageTitle_s ?? 'Wordify Crafter CMS';\n          if (model.pageDescription_s) {\n            const description = document.head.querySelector('meta[name=\"description\"]');\n            description && description.setAttribute('content', model.pageDescription_s ?? '');\n          }\n        }\n      });\n  }\n\n  getUrlWithoutParams() {\n    let urlTree = this.router.parseUrl(this.router.url);\n    urlTree.queryParams = {};\n    let routePath = this.actRoute.routeConfig.path;\n    const url = routePath.includes(':')\n      ? routePath.substring(0, routePath.indexOf(':') -1)\n      : urlTree.toString();\n\n    return url;\n  }\n\n}\n","<div [ngSwitch]=\"contentTypeId\">\n  <app-home *ngSwitchCase=\"'/page/entry'\" [state]=\"state\"></app-home>\n  <app-category *ngSwitchCase=\"'/page/category'\" [state]=\"state\"></app-category>\n  <app-contact *ngSwitchCase=\"'/page/contact'\" [state]=\"state\"></app-contact>\n  <app-about *ngSwitchCase=\"'/page/about'\" [state]=\"state\"></app-about>\n  <app-post *ngSwitchCase=\"'/component/post'\" [state]=\"state\"></app-post>\n  <app-search *ngSwitchCase=\"'/page/search'\" [state]=\"state\"></app-search>\n  <div *ngSwitchDefault>no view</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ContentService } from '../content.service';\n\nexport interface Footer {\n  aboutImage_s: string;\n  aboutTitle_s: string;\n  about_t: string;\n  copyright_html_raw: string;\n  quickLinksTitle_s: string;\n  socialLinksTitle_s: string;\n  quickLinks_o: {\n    label_s: string;\n    url_s: string;\n  }[];\n  craftercms: {};\n};\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  public footer: Footer;\n  public socialLinks = [];\n\n  constructor(private contentService: ContentService) { }\n\n  ngOnInit(): void {\n    this.contentService.getFooter()\n      .subscribe(response => {\n        this.footer = response;\n      });\n\n    this.contentService.getLevelDescriptor()\n      .subscribe(levelDescriptor => {\n        this.socialLinks = levelDescriptor.socialLinks_o;\n      })\n  }\n\n}\n","<footer class=\"site-footer\">\n  <div class=\"container\">\n    <div class=\"row mb-5\">\n      <div class=\"col-md-4\">\n        <h3>{{footer?.aboutTitle_s}}</h3>\n        <p class=\"mb-4\">\n          <img src=\"{{footer?.aboutImage_s}}\" alt=\"Image placeholder\" class=\"img-fluid\">\n        </p>\n\n        <p>{{footer?.about_t}}</p>\n      </div>\n      <div class=\"col-md-6 ml-auto\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <h3>{{footer?.quickLinksTitle_s}}</h3>\n            <ul class=\"list-unstyled\">\n              <li class=\"nav-item\" *ngFor=\"let link of footer?.quickLinks_o | sortBy: 'orderDefault_f'\">\n                <a href=\"{{link.url_s}}\">{{link.label_s}}</a>\n              </li>\n            </ul>\n          </div>\n          <div class=\"col-md-1\"></div>\n\n          <div class=\"col-md-5\">\n            <div class=\"mb-5\">\n              <h3>Social</h3>\n              <ul class=\"list-unstyled footer-social\">\n                <li class=\"nav-item\" *ngFor=\"let link of socialLinks\">\n                  <a href=\"{{link.url_s}}\">\n                    <span class=\"fa fa-{{link.socialNetwork_s}}\"></span>\n                    {{link.label_s}}\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12 text-center\">\n        <p class=\"small\" [innerHTML]=\"footer?.copyright_html_raw\"></p>\n      </div>\n    </div>\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { ContentService } from '../content.service';\n\nexport interface NavItem {\n  contentTypeId: string;\n  navLabel: string;\n  orderDefault_f: number;\n  url: string;\n}\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  public nav: NavItem[] = [];\n  public siteTitle;\n  public socialLinks = [];\n  constructor(private contentService: ContentService) {\n  }\n\n  ngOnInit(): void {\n    this.contentService.getNav()\n      .subscribe(response => {\n        this.nav = response;\n      });\n\n    this.contentService.getLevelDescriptor()\n      .subscribe(levelDescriptor => {\n        this.siteTitle = levelDescriptor.siteTitle_s;\n        this.socialLinks = levelDescriptor.socialLinks_o;\n      })\n  }\n\n}\n","<header role=\"banner\">\n  <div class=\"top-bar\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-9 social\">\n          <a *ngFor=\"let link of socialLinks\" href=\"{{link.url_s}}\">\n            <span class=\"fa fa-{{link.socialNetwork_s}}\"></span>\n          </a>\n        </div>\n        <div class=\"col-3 search-top\">\n          <app-search-form\n            [classes]=\"{\n              form: 'search-top-form'\n            }\"\n            [id]=\"'st'\"\n            [placeholder]=\"'Type a keyword and hit enter'\"\n          >\n          </app-search-form>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"container logo-wrap\">\n    <div class=\"row pt-5\">\n      <div class=\"col-12 text-center\">\n        <a class=\"absolute-toggle d-block d-md-none\" data-toggle=\"collapse\" href=\"#navbarMenu\" role=\"button\" aria-expanded=\"false\" aria-controls=\"navbarMenu\"><span class=\"burger-lines\"></span></a>\n        <h1 class=\"site-logo\"><a routerLink=\"/\" routerLinkActive=\"active\">{{siteTitle}}</a></h1>\n      </div>\n    </div>\n  </div>\n\n  <nav class=\"navbar navbar-expand-md  navbar-light bg-light\">\n    <div class=\"container\">\n      <div class=\"collapse navbar-collapse\" id=\"navbarMenu\">\n        <ul class=\"navbar-nav mx-auto\">\n          <li class=\"nav-item\" *ngFor=\"let item of nav | sortBy: 'orderDefault_f'\">\n            <a class=\"nav-link\" routerLink=\"{{item.url}}\" routerLinkActive=\"active\">{{item.navLabel}}</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</header>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ContentService } from '../content.service';\nimport { defaultData } from '../pagination/pagination.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  @Input() state;\n  public slider_o;\n  public numOfPages;\n  public bios_o;\n  public posts_o = [];\n  public paginationData = defaultData;\n\n  constructor(private contentService: ContentService) {}\n\n  getPosts(): void {\n    this.contentService.getPosts(null, null, null, this.paginationData)\n      .subscribe(response => {\n        this.paginationData.pageCount = Math.ceil(response.total / this.paginationData.itemsPerPage);\n        this.posts_o = response.items;\n      });\n  }\n\n  onPageChange(page: number) {\n    this.paginationData.currentPage = page;\n    this.getPosts();\n  }\n\n  ngOnInit(): void {\n    this.paginationData.itemsPerPage = this.state.meta.posts.limit;\n    this.slider_o = this.state.model.slider_o;\n    this.bios_o = this.state.model.bios_o;\n\n    this.getPosts();\n  }\n}\n","<section class=\"site-section pt-5 pb-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <app-slider *ngFor=\"let slider of slider_o;\" [slider]=\"slider\"></app-slider>\n      </div>\n    </div>\n  </div>\n</section>\n<section class=\"site-section py-sm\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <h2 class=\"mb-4\">Latest Posts</h2>\n      </div>\n    </div>\n    <div class=\"row blog-entries\">\n      <div class=\"col-md-12 col-lg-8 main-content\">\n        <div class=\"row\">\n          <div *ngFor=\"let post of posts_o;\" class=\"col-md-6\">\n            <app-post-card [model]=\"post\"></app-post-card>\n          </div>\n        </div>\n        <div *ngIf=\"paginationData.pageCount > 1\" class=\"row mt-5\">\n          <div class=\"col-md-12 text-center\">\n            <nav aria-label=\"Page navigation\" class=\"text-center\">\n              <app-pagination\n                [currentPage]=\"paginationData.currentPage\"\n                [itemsPerPage]=\"paginationData.itemsPerPage\"\n                [pageCount]=\"paginationData.pageCount\"\n                [onPageChange]=\"onPageChange.bind(this)\"\n              ></app-pagination>\n            </nav>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-12 col-lg-4 sidebar\">\n\n        <app-sidebar-search></app-sidebar-search>\n\n        <app-sidebar-bios [bios]=\"bios_o\"></app-sidebar-bios>\n\n        <app-recent-posts-aside></app-recent-posts-aside>\n\n        <app-sidebar-categories></app-sidebar-categories>\n\n        <app-sidebar-tags></app-sidebar-tags>\n\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-image',\n  template: `<img src=\"{{image_s}}\" alt=\"{{alternativeText_s || ''}}\" class=\"img-fluid\" />`,\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnInit {\n  @Input() model;\n  public image_s;\n  public alternativeText_s;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.image_s = this.model.image_s;\n    this.alternativeText_s = this.model.alternativeText_s;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n  The page you've selected needs to be created by the site developers.\n</section>\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Input, OnInit } from '@angular/core';\n\nexport const defaultData = {\n  currentPage: 0,\n  itemsPerPage: 1,\n  pageCount: 1\n}\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\nexport class PaginationComponent implements OnInit {\n  @Input() currentPage;\n  @Input() itemsPerPage;\n  @Input() pageCount;\n  @Input() onPageChange;\n  public paginationData = defaultData;\n\n  public pageChange(page: number) {\n    this.paginationData.currentPage = page;\n    this.onPageChange(page);\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.paginationData = {\n      ...this.paginationData,\n      currentPage: this.currentPage,\n      itemsPerPage: this.itemsPerPage,\n      pageCount: this.pageCount\n    }\n  }\n}\n","<!--\n  ~ Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU General Public License version 3 as published by\n  ~ the Free Software Foundation.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<nav aria-label=\"Page navigation\" class=\"text-center\">\n  <ul class=\"pagination\">\n    <li [ngClass]=\"{'disabled': paginationData.currentPage === 0}\" class=\"page-item\">\n      <a class=\"page-link\" (click)=\"pageChange(paginationData.currentPage - 1)\">&lt;</a>\n    </li>\n\n    <li\n      *ngFor=\"let i = index; let number of [].constructor(paginationData.pageCount || 0)\"\n      [ngClass]=\"{'active': i === paginationData.currentPage}\"\n      class=\"page-item\"\n    >\n      <a class=\"page-link\" (click)=\"pageChange(i)\">\n        {{i + 1 }}\n      </a>\n    </li>\n\n    <li [ngClass]=\"{'disabled': paginationData.currentPage === paginationData.pageCount - 1}\" class=\"page-item\">\n      <a class=\"page-link\" (click)=\"pageChange(paginationData.currentPage + 1)\">&gt;</a>\n    </li>\n  </ul>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { ContentService } from '../content.service';\n\n@Component({\n  selector: 'app-recent-posts-aside',\n  templateUrl: './recent-posts-aside.component.html',\n  styleUrls: ['./recent-posts-aside.component.scss']\n})\nexport class RecentPostsAsideComponent implements OnInit {\n  public posts = [];\n\n  constructor(private contentService: ContentService) {\n  }\n\n  ngOnInit(): void {\n    this.contentService.getPosts()\n      .subscribe(response => {\n        this.posts  = response.items;\n      });\n  }\n\n}\n","<div class=\"sidebar-box\">\n  <h3 class=\"heading\">\n    Recent Posts\n  </h3>\n  <div class=\"post-entry-sidebar\">\n    <ul>\n      <li *ngFor=\"let post of posts\">\n        <app-post-card [format]=\"'landscapeCompressed'\" [model]=\"post\"></app-post-card>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport Utils from '../utils';\n\nexport const\n  PORTRAIT = 'portrait',\n  LANDSCAPE = 'landscape',\n  LANDSCAPE_COMPRESSED = 'landscapeCompressed',\n  IMAGE_BACKGROUND = 'imageBackground';\n\n@Component({\n  selector: 'app-post-card',\n  templateUrl: './post-card.component.html',\n  styleUrls: ['./post-card.component.scss']\n})\nexport class PostCardComponent implements OnInit {\n  @Input() tags = '';\n  @Input() model;\n  @Input() showBlurb = false;\n  @Input() format = PORTRAIT;\n  @Input() classes;\n  @Input() numOfComments;\n  public mainImage_s;\n  public blurb_t;\n  public headline_s;\n  public dateModified;\n  public type;\n  public authorAvatarUrl;\n  public authorName;\n  public slug;\n  public categories;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.type = this.format;\n    this.mainImage_s = this.model.mainImage_s;\n    this.headline_s = this.model.headline_s;\n    this.dateModified = Utils.formatDate(this.model.craftercms.dateModified);\n    this.blurb_t = this.model.blurb_t;\n    this.authorAvatarUrl = this.model.authorBio_o[0].profilePic_s;\n    this.authorName = this.model.authorBio_o[0].name_s;\n    this.slug = Utils.computeSlug(this.model.craftercms.path);\n    this.categories = this.model.categories_o;\n  }\n\n}\n","<div [ngSwitch]=\"type\">\n  <div\n    *ngSwitchCase=\"'imageBackground'\"\n    [ngStyle]=\"{ 'background-image': 'url(' + mainImage_s + ')'}\"\n    class=\"a-block d-flex align-items-center {{classes?.root}}\"\n  >\n    <a class=\"text {{classes?.innerWrapper}}\" routerLink=\"{{slug}}\">\n      <div class=\"post-meta\">\n        <div *ngIf=\"categories\">\n          <span *ngFor=\"let category of categories\" class=\"category\">{{category.value_smv}}</span>\n          <span> • </span>\n        </div>\n        <span class=\"mr-2\">{{dateModified}}</span>\n        <span *ngIf=\"numOfComments\"> • </span>\n        <span *ngIf=\"numOfComments\" class=\"ml-2\">\n          <span class=\"fa fa-comments\"></span>{{numOfComments}}\n        </span>\n      </div>\n      <h3>{{headline_s}}</h3>\n      <p *ngIf=\"showBlurb\">{{blurb_t}}</p>\n    </a>\n  </div>\n  <a *ngSwitchCase=\"'portrait'\" class=\"blog-entry {{classes?.root}}\" routerLink=\"{{slug}}\">\n    <img src=\"{{mainImage_s}}\">\n    <div class=\"blog-content-body\">\n      <div class=\"post-meta\">\n        <span class=\"author mr-2\">\n          <img src=\"{{authorAvatarUrl}}\">\n          {{authorName}}\n        </span>\n        <span> • </span>\n        <span class=\"mr-2\">{{dateModified}}</span>\n        <span *ngIf=\"numOfComments\"> • </span>\n        <span *ngIf=\"numOfComments\" class=\"ml-2\">\n          <span class=\"fa fa-comments\"></span>{{numOfComments}}\n        </span>\n      </div>\n      <h2>{{headline_s}}</h2>\n    </div>\n  </a>\n  <a *ngSwitchCase=\"'landscapeCompressed'\" class=\"{{classes?.root}}\" routerLink=\"{{slug}}\">\n    <img class=\"mr-4\" src=\"{{mainImage_s}}\">\n    <div class=\"text\">\n      <h4>{{headline_s}}</h4>\n      <div class=\"post-meta\">\n        <span class=\"mr-2\">{{dateModified}}</span>\n      </div>\n    </div>\n  </a>\n  <div *ngSwitchCase=\"'landscape'\" class=\"post-entry-horizontal\">\n    <a class=\"{{classes?.root}}\" routerLink=\"{{slug}}\">\n      <div [ngStyle]=\"{ 'background-image': 'url(' + mainImage_s + ')'}\" class=\"image\"></div>\n      <span class=\"text\">\n        <div class=\"post-meta\">\n          <span class=\"author mr-2\">\n            <img src=\"{{authorAvatarUrl}}\">\n            {{authorName}}\n          </span>\n          <span> • </span>\n          <span class=\"mr-2\">{{dateModified}}</span>\n          <span *ngIf=\"numOfComments\"> • </span>\n          <span *ngIf=\"numOfComments\" class=\"ml-2\">\n            <span class=\"fa fa-comments\"></span>{{numOfComments}}\n          </span>\n        </div>\n        <h2>{{headline_s}}</h2>\n      </span>\n    </a>\n  </div>\n  <div *ngSwitchDefault>no view</div>\n</div>\n\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ContentService } from '../content.service';\nimport Utils from '../utils';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n  @Input() state;\n  public postId;\n  public mainImage_s;\n  public headline_s;\n  public posts_o = [];\n  public bios_o;\n  public dateCreated;\n  public profilePic_s;\n  public name_s;\n  public path;\n  public categories_o = [];\n  public tags_o = [];\n  public paginationData;\n  public content_o;\n  public websiteShortname;\n\n  constructor(private contentService: ContentService) {\n  }\n\n  getPosts(): void {\n    this.contentService.getPosts(\n      this.categories_o,\n      this.tags_o,\n      this.path,\n      this.paginationData\n    )\n      .subscribe(response => {\n        this.posts_o = response.items;\n        this.paginationData.pageCount = response.pageCount;\n      });\n  }\n\n  onPageChange(page: number) {\n    this.paginationData.currentPage = page;\n    this.getPosts();\n  }\n\n  ngOnInit(): void {\n    this.postId = this.state.model.craftercms.id;\n    this.mainImage_s = this.state.model.mainImage_s;\n    this.headline_s = this.state.model.headline_s;\n    this.dateCreated = Utils.formatDate(this.state.model.craftercms.dateCreated);\n    this.bios_o = this.state.model.authorBio_o;\n    this.profilePic_s = this.state.model.authorBio_o?.[0]?.profilePic_s;\n    this.name_s = this.state.model.authorBio_o?.[0]?.name_s;\n    this.path = this.state.model.craftercms.path;\n    this.categories_o = this.state.model.categories_o;\n    this.tags_o = this.state.model.tags_o;\n    this.content_o = this.state.model.content_o;\n    this.paginationData = {\n      currentPage: 0,\n      itemsPerPage: this.state.meta.posts.limit,\n      numOfPages: Math.ceil(this.state.meta.posts.total / this.state.meta.posts.limit)\n    };\n\n    this.getPosts();\n\n    this.contentService.getLevelDescriptor()\n      .subscribe(levelDescriptor => {\n        this.websiteShortname = levelDescriptor.websiteShortname_s??'DISQUS';\n      })\n  }\n\n}\n","<section class=\"site-section py-lg\">\n  <div class=\"container\">\n    <div class=\"row blog-entries element-animate-disabled\">\n\n      <div class=\"col-md-12 col-lg-8 main-content\">\n        <img class=\"img-fluid mb-5\" src=\"{{mainImage_s}}\">\n        <div class=\"post-meta\">\n          <span class=\"author mr-2\">\n            <img class=\"mr-2\" src={{profilePic_s}} />\n            {{name_s}}\n          </span>\n          • <span class=\"mr-2\">{{dateCreated}}</span>\n          • <span class=\"ml-2\">\n              <span class=\"fa fa-comments\"></span>\n                <app-comments-count *ngIf=\"websiteShortname\" [id]=\"postId\" [websiteShortname]=\"websiteShortname\"></app-comments-count>\n              </span>\n        </div>\n        <h1>{{headline_s}}</h1>\n        <a class=\"category mb-5\" *ngFor=\"let category of categories_o\" href=\"/category/{{category.key}}\">\n          {{category.value_smv}}\n        </a>\n\n        <div class=\"post-content-body\">\n          <app-content-type *ngFor=\"let component of content_o\" [model]=\"component\"></app-content-type>\n        </div>\n\n        <div class=\"pt-5\">\n          <div>\n            Categories:\n            <a *ngFor=\"let category of categories_o; let i=index\" href=\"/category/{{category.key}}\">\n              {{category.value_smv}}{{ i < categories_o.length - 1 ? ',' : '' }}\n            </a>\n          </div>\n          <div>\n            Tags:\n            <a *ngFor=\"let tag of tags_o; let i=index\" href=\"/tag/{{tag.key}}\">\n              #{{tag.value_smv}}{{ i < tags_o.length - 1 ? ',' : '' }}\n            </a>\n          </div>\n        </div>\n\n        <div class=\"mt-5\">\n          <app-comments *ngIf=\"websiteShortname\" [id]=\"postId\" [websiteShortname]=\"websiteShortname\"></app-comments>\n        </div>\n      </div>\n\n      <div class=\"col-md-12 col-lg-4 sidebar\">\n\n        <app-sidebar-search></app-sidebar-search>\n\n        <app-sidebar-bios [bios]=\"bios_o\"></app-sidebar-bios>\n\n        <app-recent-posts-aside></app-recent-posts-aside>\n\n        <app-sidebar-categories></app-sidebar-categories>\n\n        <app-sidebar-tags></app-sidebar-tags>\n\n      </div>\n\n    </div>\n  </div>\n</section>\n<section class=\"py-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h2 class=\"mb-3\">Related Post</h2>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div *ngFor=\"let post of posts_o;\" class=\"col-md-6 col-lg-4\">\n        <app-post-card\n          [classes]=\"{ root: 'sm height-md' }\" [format]=\"'imageBackground'\" [model]=\"post\"\n        ></app-post-card>\n      </div>\n    </div>\n    <div *ngIf=\"paginationData.pageCount > 1\" class=\"row mt-5\">\n      <div class=\"col-md-12 text-center\">\n        <nav aria-label=\"Page navigation\" class=\"text-center\">\n          <app-pagination\n            [currentPage]=\"paginationData.currentPage\"\n            [itemsPerPage]=\"paginationData.itemsPerPage\"\n            [pageCount]=\"paginationData.pageCount\"\n            [onPageChange]=\"onPageChange.bind(this)\"\n          ></app-pagination>\n        </nav>\n      </div>\n    </div>\n  </div>\n</section>\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n// language=GraphQL\nconst commonFragments = `\n  fragment byUrlQueryPost on component_post {\n    ...byUrlQueryContentItemFields\n    slug: localId(transform: \"storeUrlToRenderUrl\")\n    pageTitle_s\n    pageDescription_s\n    blurb_t\n    headline_s\n    mainImage_s\n    content_o {\n      item {\n        key\n        component {\n          ...on component_rich_text {\n            ...byUrlQueryRichText\n          }\n          ...on component_image {\n            ...byUrlQueryImage\n          }\n          ...on component_responsive_columns {\n            ...byUrlQueryResponsiveColumns\n          }\n        }\n      }\n    }\n    authorBio_o {\n      item {\n        key\n        component {\n          ...byUrlQueryBioFragment\n        }\n      }\n    }\n    categories_o {\n      item {\n        key(filter: {or: $categoriesFilter})\n        value_smv\n      }\n    }\n    tags_o {\n      item {\n        value_smv\n        key(filter: {or: $tagsFilter})\n      }\n    }\n  }\n\n  fragment byUrlQueryContentItemFields on ContentItem {\n    guid: objectId\n    path: localId(filter: {not: [{equals: $exclude}]})\n    contentTypeId: content__type\n    dateCreated: createdDate_dt\n    dateModified: lastModifiedDate_dt\n    label: internal__name\n  }\n\n  fragment byUrlQueryBioFragment on component_bio {\n    guid: objectId\n    contentTypeId: content__type\n    label: internal__name\n    path: localId\n    bio_t\n    name_s\n    profilePic_s\n    linkButtonText_s\n    linkButtonUrl_s\n    showLinkButton_b\n    facebookLink_s\n    twitterLink_s\n    instagramLink_s\n    youTubeLink_s\n  }\n\n  fragment byUrlQueryRichText on component_rich_text {\n    ...byUrlQueryContentItemFields\n    content_html: content_html_raw\n  }\n\n  fragment byUrlQueryImage on component_image {\n    ...byUrlQueryContentItemFields\n    image_s\n    alternativeText_s\n  }\n\n  fragment byUrlQueryResponsiveColumns on component_responsive_columns {\n    ...byUrlQueryContentItemFields\n    columns_o {\n      item {\n        columnSize_s\n        content_o {\n          item {\n            key\n            component {\n              ...on component_rich_text {\n                ...byUrlQueryRichText\n              }\n              ...on component_image {\n                ...byUrlQueryImage\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n// language=GraphQL\nexport default `\n  ${commonFragments}\n\n  fragment byUrlQueryHomepage on page_entry  {\n    pageTitle_s\n    pageDescription_s\n    bios_o {\n      item {\n        key\n        component {\n          ...byUrlQueryBioFragment\n        }\n      }\n    }\n    slider_o {\n      item {\n        key\n        component {\n          ...byUrlQueryContentItemFields\n          ...on component_slider {\n            ...byUrlQuerySlider\n          }\n        }\n      }\n    }\n  }\n\n  fragment byUrlQueryAboutPage on page_about {\n    pageTitle_s\n    pageDescription_s\n    headline_s\n    bios_o {\n      item {\n        key\n        component {\n          ...byUrlQueryBioFragment\n        }\n      }\n    }\n    content_o {\n      item {\n        key\n        component {\n          ...on component_rich_text {\n            ...byUrlQueryRichText\n          }\n          ...on component_image {\n            ...byUrlQueryImage\n          }\n          ...on component_responsive_columns {\n            ...byUrlQueryResponsiveColumns\n          }\n        }\n      }\n    }\n  }\n\n  fragment byUrlQueryContactPage on page_contact {\n    pageTitle_s\n    pageDescription_s\n    message_t\n    headline_s\n  }\n\n  fragment byUrlQueryCategoryPage on page_category {\n    pageTitle_s\n    pageDescription_s\n  }\n\n  fragment byUrlQuerySlider on component_slider {\n    ...byUrlQueryContentItemFields\n    posts_o {\n      item {\n        key\n        component {\n          ...byUrlQueryContentItemFields\n          slug: localId(transform: \"storeUrlToRenderUrl\")\n          pageTitle_s\n          pageDescription_s\n          blurb_t\n          headline_s\n          mainImage_s\n          authorBio_o {\n            item {\n              key,\n              component {\n                ...byUrlQueryBioFragment\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  query byUrlQuery(\n    $url: String\n    $skipContentType: Boolean = true\n    $includePosts: Boolean = true\n    $postsLimit: Int = 8\n    $postsOffset: Int = 0\n    $exclude: String = \"\"\n    $categoriesFilter: [TextFilters!] = []\n    $tagsFilter: [TextFilters!] = []\n  ) {\n    content: contentItems {\n      total\n      items {\n        ...byUrlQueryContentItemFields\n        url: localId(\n          transform: \"storeUrlToRenderUrl\",\n          filter:{ regex: $url }\n        )\n        content__type(\n          filter:{\n            regex: \".*(bio|post|entry|category|contact|about|search).*\"\n          }\n        ) @skip (if: $skipContentType)\n        ...on page_entry {\n          ...byUrlQueryHomepage\n        }\n        ...on page_about {\n          ...byUrlQueryAboutPage\n        }\n        ...on page_contact {\n          ...byUrlQueryContactPage\n        }\n        ...on page_category {\n          ...byUrlQueryCategoryPage\n        }\n        ...on component_post {\n          ...byUrlQueryPost\n        }\n      }\n    }\n    levelDescriptors: component_level__descriptor {\n      items {\n        siteTitle_s\n        file__name\n        websiteShortname_s\n        socialLinks_o {\n          item {\n            socialNetwork_s\n            label_s\n            url_s\n          }\n        }\n      }\n    }\n    posts: component_post(\n      limit: $postsLimit,\n      offset: $postsOffset,\n      sortOrder: DESC,\n      sortBy: \"lastModifiedDate_dt\"\n    ) @include(if: $includePosts) {\n      total\n      items {\n        ...byUrlQueryPost\n      }\n    }\n    taxonomies: taxonomy {\n      total\n      items {\n        guid: objectId\n        path: localId\n        contentTypeId: content__type\n        dateCreated: createdDate_dt\n        dateModified: lastModifiedDate_dt\n        label: internal__name\n        items {\n          item {\n            key\n            value\n            image_s\n          }\n        }\n      }\n    }\n  }\n`;\n\n//language=GraphQL\nexport const postsQuery = `\n  ${commonFragments}\n\n  query postsQuery(\n    $postsLimit: Int = 8\n    $postsOffset: Int = 0\n    $exclude: String = \"\"\n    $categoriesFilter: [TextFilters!] = []\n    $tagsFilter: [TextFilters!] = []\n  ) {\n    posts: component_post(\n      limit: $postsLimit,\n      offset: $postsOffset,\n      sortOrder: DESC,\n      sortBy: \"lastModifiedDate_dt\"\n    ) {\n      total\n      items {\n        ...byUrlQueryPost\n      }\n    }\n  }\n`;\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-responsive-columns',\n  templateUrl: './responsive-columns.component.html',\n  styleUrls: ['./responsive-columns.component.scss']\n})\nexport class ResponsiveColumnsComponent implements OnInit {\n  @Input() model;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row mb-5\">\n  <div class=\"mb-5\" *ngFor=\"let column of model.columns_o\" class=\"col-md-{{column.columnSize_s}} mb-4\">\n    <app-content-type *ngFor=\"let component of column.content_o\" [model]=\"component\"></app-content-type>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rich-text',\n  template: `<div [innerHTML]=\"content_html\"></div>`,\n  styleUrls: ['./rich-text.component.scss']\n})\nexport class RichTextComponent implements OnInit {\n  @Input() model;\n  public content_html;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.content_html = this.model.content_html;\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.scss']\n})\nexport class SearchFormComponent implements OnInit {\n  @Input() classes;\n  @Input() placeholder;\n  @Input() id;\n  public keyword = '';\n\n  getKeyword(): string {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get('q')??'';\n  }\n\n  constructor(private actRoute: ActivatedRoute, private router: Router) {\n    this.keyword = this.getKeyword()\n  }\n\n  ngOnInit(): void {\n    this.router.events.subscribe((val) => {\n      if (val instanceof NavigationEnd) {\n        this.keyword = this.getKeyword();\n      }\n    });\n  }\n\n  onEnter(): void {\n    this.router.navigate(\n      ['/search'],\n      {\n        queryParams: {\n          q: this.keyword\n        }\n      }\n    );\n  }\n\n}\n","<form class=\"{{classes?.form}}\">\n  <div class=\"{{classes?.inputWrapper}}\">\n    <span class=\"icon fa fa-search\"></span>\n    <input\n      (keyup.enter)=\"onEnter()\"\n      [(ngModel)]=\"keyword\"\n      class=\"{{classes.input}}\"\n      id=\"{{id}}\"\n      name=\"keyword\"\n      placeholder=\"{{placeholder}}\"\n    />\n  </div>\n</form>\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ContentService } from '../content.service';\nimport { defaultData } from '../pagination/pagination.component';\nimport { map } from 'rxjs/operators';\nimport { parseDescriptor, preParseSearchResults } from '@craftercms/content';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  @Input() state;\n  public results = [];\n  public paginationData = defaultData;\n  public keyword = '';\n  public bios_o;\n  public totalResults = 0;\n\n  constructor(private contentService: ContentService, private actRoute: ActivatedRoute){}\n\n  getResults(): void {\n    this.contentService.searchPosts(\n      this.keyword,\n      this.paginationData.itemsPerPage,\n      (this.paginationData.currentPage * this.paginationData.itemsPerPage)\n    )\n      .pipe(    // TODO: move this to service, error in service\n        map(({ hits, total, ...rest }) => {\n          const parsedHits = hits.map(({ _source }) => parseDescriptor(\n            preParseSearchResults(_source)\n          ));\n          return { ...rest, hits: parsedHits, total: total.value??total };\n        })\n      )\n      .subscribe(response => {\n        this.paginationData.pageCount = Math.ceil(response.total / this.paginationData.itemsPerPage);\n        this.results = response.hits;\n        this.totalResults = response.total\n      });\n  }\n\n  onPageChange(page: number) {\n    this.paginationData.currentPage = page;\n    this.getResults();\n  }\n\n  ngOnInit(): void {\n    this.bios_o = this.state.model.bios_o;\n    this.paginationData.itemsPerPage = this.state.meta.posts.limit;\n    this.actRoute.queryParams.subscribe(parameters => {\n      this.keyword = parameters.q;\n      this.getResults();\n    });\n  }\n}\n","<section class=\"site-section pt-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h2 class=\"mb-4\">\n          Search Results\n        </h2>\n      </div>\n    </div>\n    <div class=\"row blog-entries\">\n      <div class=\"col-md-12 col-lg-8 main-content\">\n        <div class=\"row mb-5 mt-5\">\n          <div class=\"col-md-12\">\n            <p>{{totalResults}} result{{totalResults === 0 || totalResults > 1 ? 's' : ''}} found.</p>\n            <app-post-card\n              *ngFor=\"let result of results;\" [format]=\"'landscape'\" [model]=\"result\"\n            ></app-post-card>\n          </div>\n        </div>\n        <div *ngIf=\"paginationData.pageCount > 1\" class=\"row\">\n          <div class=\"col-md-12 text-center\">\n            <nav aria-label=\"Page navigation\" class=\"text-center\">\n              <app-pagination\n                [currentPage]=\"paginationData.currentPage\"\n                [itemsPerPage]=\"paginationData.itemsPerPage\"\n                [pageCount]=\"paginationData.pageCount\"\n                [onPageChange]=\"onPageChange.bind(this)\"\n              ></app-pagination>\n            </nav>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-12 col-lg-4 sidebar\">\n\n        <app-sidebar-search></app-sidebar-search>\n\n        <app-sidebar-bios [bios]=\"bios_o\"></app-sidebar-bios>\n\n        <app-recent-posts-aside></app-recent-posts-aside>\n\n        <app-sidebar-categories></app-sidebar-categories>\n\n        <app-sidebar-tags></app-sidebar-tags>\n\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar-bios',\n  templateUrl: './sidebar-bios.component.html',\n  styleUrls: ['./sidebar-bios.component.scss']\n})\nexport class SidebarBiosComponent implements OnInit {\n  @Input() bios;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngFor=\"let bio of bios\" class=\"sidebar-box\">\n  <app-bio [bio]=\"bio\"></app-bio>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport Utils from '../utils';\n\n@Component({\n  selector: 'app-sidebar-categories',\n  templateUrl: './sidebar-categories.component.html',\n  styleUrls: ['./sidebar-categories.component.scss']\n})\nexport class SidebarCategoriesComponent implements OnInit {\n  public filter;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.filter = Utils.createTaxonomyFilter('categories.xml');\n  }\n\n}\n","<app-sidebar-taxonomies\n  [title] = \"'Categories'\"\n  [baseUrl] = \"'/category'\"\n  [listClass] = \"'categories'\"\n  [filter] = \"filter\"\n></app-sidebar-taxonomies>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar-search',\n  templateUrl: './sidebar-search.component.html',\n  styleUrls: ['./sidebar-search.component.scss']\n})\nexport class SidebarSearchComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"sidebar-box search-form-wrap\">\n  <app-search-form\n    [classes]=\"{\n      form: 'search-form',\n      input: 'form-control',\n      inputWrapper: 'form-group'\n    }\"\n    [id]=\"'s'\"\n    [placeholder]=\"'Type a keyword and hit enter'\"\n  >\n  </app-search-form>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport Utils from '../utils';\n\n@Component({\n  selector: 'app-sidebar-tags',\n  templateUrl: './sidebar-tags.component.html',\n  styleUrls: ['./sidebar-tags.component.scss']\n})\nexport class SidebarTagsComponent implements OnInit {\n  public filter;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.filter = Utils.createTaxonomyFilter('tags.xml');\n  }\n\n}\n","<app-sidebar-taxonomies\n  [title] = \"'Tags'\"\n  [baseUrl] = \"'/tag'\"\n  [listClass] = \"'tags'\"\n  [filter] = \"filter\"\n></app-sidebar-taxonomies>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ContentService } from '../content.service';\n\n@Component({\n  selector: 'app-sidebar-taxonomies',\n  templateUrl: './sidebar-taxonomies.component.html',\n  styleUrls: ['./sidebar-taxonomies.component.scss']\n})\nexport class SidebarTaxonomiesComponent implements OnInit {\n  @Input() title;\n  @Input() filter;\n  @Input() baseUrl;\n  @Input() listClass;\n  public filteredTaxonomies;\n\n  constructor(private contentService: ContentService) {\n  }\n\n  ngOnInit(): void {\n    this.contentService.getTaxonomies()\n      .subscribe(response => {\n        this.filteredTaxonomies = response.filter(this.filter)[0].items.item;\n      })\n  }\n\n}\n","<div class=\"sidebar-box\">\n  <h3 class=\"heading\">\n    {{title}}\n  </h3>\n  <ul class=\"{{listClass}} clearfix\">\n    <li *ngFor=\"let taxonomy of filteredTaxonomies\">\n      <a routerLink=\"{{baseUrl}}/{{taxonomy.key}}\">{{taxonomy.value}}</a>\n    </li>\n  </ul>\n</div>\n","import { Component, Input, OnInit, AfterViewInit } from '@angular/core';\nimport { IMAGE_BACKGROUND } from '../post-card/post-card.component';\n\n@Component({\n  selector: 'app-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent implements OnInit {\n  @Input() slider;\n  constructor() {\n  }\n  public posts_o;\n  public format;\n\n  ngOnInit(): void {\n    this.posts_o = this.slider.posts_o;\n    this.format = IMAGE_BACKGROUND;\n\n  }\n\n  ngAfterViewInit(): void {\n    // @ts-ignore\n    $('.home-slider').owlCarousel({\n      loop: true,\n      autoplay: true,\n      margin: 10,\n      animateOut: 'fadeOut',\n      animateIn: 'fadeIn',\n      nav: true,\n      autoplayHoverPause: true,\n      items: 1,\n      navText: ['<span class=\\'ion-chevron-left\\'></span>', '<span class=\\'ion-chevron-right\\'></span>'],\n      responsive: {\n        0: {\n          items: 1,\n          nav: false\n        },\n        600: {\n          items: 1,\n          nav: false\n        },\n        1000: {\n          items: 1,\n          nav: true\n        }\n      }\n    });\n  }\n}\n","<div class=\"owl-carousel owl-theme home-slider\">\n  <app-post-card\n    *ngFor=\"let post of posts_o;\"\n    [tags]=\"'food'\"\n    [model]=\"post\"\n    [showBlurb]=\"true\"\n    [format]=\"format\"\n    [classes]=\"{root: 'height-lg', innerWrapper: 'half-to-full' }\"\n  >\n  </app-post-card>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sortBy'\n})\nexport class SortByPipe implements PipeTransform {\n\n  transform(array: any[], field = ''): unknown {\n    if (!Array.isArray(array)) {\n      return;\n    }\n    array.sort((a: any, b: any) => {\n      if (a[field] < b[field]) {\n        return -1;\n      } else if (a[field] > b[field]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return array;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss']\n})\nexport class ToastComponent implements OnInit {\n  @Input() display;\n  @Input() text;\n  @Input() type;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [ngClass]=\"'alert alert-'+ type\" role=\"alert\">\n  {{text}}\n</div>\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { environment } from '../environments/environment';\nimport Cookies from 'js-cookie';\n\nexport default class Utils {\n  static siteName() {\n    return environment.crafterSiteId || Cookies.get('crafterSite');\n  }\n  static computeSlug(path: string) {\n    return path\n      .replace(/(\\/site\\/components)|(index\\.xml)/g, '')\n      .replace(/(\\/site\\/website)|(index\\.xml)/g, '')\n      .replace(/(\\/\\/)/g, '/')\n      .replace('.xml', '');\n  }\n\n  static crafterConfig() {\n    return {\n      baseUrl: environment.baseUrl,\n      site: this.siteName()\n    }\n  }\n\n  static createTaxonomyFilter(name) {\n    return (taxonomy => taxonomy.craftercms.path.includes(name));\n  }\n\n  static formatDate(date: string) {\n    return new Date(date).toLocaleDateString()\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8080',\n  graphqlServer: '//localhost:8080/api/1/site/graphql',\n  crafterSiteId: null\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}